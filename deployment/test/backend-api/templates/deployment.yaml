---
# Source: backend-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-backend-api
  labels:
    app: backend-api
    tier: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api
      tier: application
  template:
    metadata:
      labels:
        app: backend-api
        tier: application
    spec:
      terminationGracePeriodSeconds: 80
      serviceAccountName: backend-api
      securityContext:
        {}
      containers:
        - name: backend-api
          securityContext:
            {}
          image: "8899898233123.dkr.ecr.ap-southeast-1.amazonaws.com/backend-api:latest"
          imagePullPolicy: Always
          ports:
            - name: tcp
              containerPort: 9000
          volumeMounts:
            - name: shared-files
              mountPath: /var/www
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www"]
          resources:
            {}
        - name: release-name-backend-api-nginx
          image: "nginx:1.21-alpine"
          imagePullPolicy: "Always"
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: shared-files
              mountPath: /app
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: release-name-backend-api
        - name: shared-files
          emptyDir: {}
