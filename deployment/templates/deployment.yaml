apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend-api.fullname" . }}
  labels:
    app: {{ .Values.name }}
    tier: {{ .Values.tier }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      tier: {{ .Values.tier }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.name }}
        tier: {{ .Values.tier }}
    spec:
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backend-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp
              containerPort: 3000
          volumeMounts:
            - name: shared-files
              mountPath: /var/www
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /web/. /var/www"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
     #   - name: {{ include "backend-api.fullname" . }}-nginx
     #     image: "nginx:1.21-alpine"
     #     imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
     #     ports:
     #       - name: http
     #         containerPort: 80
     #     livenessProbe:
     #       httpGet:
     #         path: /health
     #         port: http
     #       initialDelaySeconds: 30
     #       timeoutSeconds: 5
     #     readinessProbe:
     #       httpGet:
     #         path: /health
     #         port: http
     #       initialDelaySeconds: 5
     #       timeoutSeconds: 1
     #     volumeMounts:
     #       - name: shared-files
     #         mountPath: /web
     #       - name: nginx-config
     #         mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "backend-api.fullname" . }}
        - name: shared-files
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
